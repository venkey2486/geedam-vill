{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\new pro\\\\myg\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\new pro\\\\myg\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import Axios from\"axios\";import Cookie from\"js-cookie\";import{CART_ADD_ITEM,CART_REMOVE_ITEM,CART_SAVE_SHIPPING,CART_SAVE_PAYMENT}from\"../constants/cartConstants\";var addToCart=function addToCart(productId,qty){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var _yield$Axios$get,data,_getState,cartItems;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return Axios.get(\"/api/products/\"+productId);case 3:_yield$Axios$get=_context.sent;data=_yield$Axios$get.data;dispatch({type:CART_ADD_ITEM,payload:{product:data._id,name:data.name,image:data.image,price:data.price,countInStock:data.countInStock,qty:qty}});_getState=getState(),cartItems=_getState.cart.cartItems;Cookie.set(\"cartItems\",JSON.stringify(cartItems));_context.next=12;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};var removeFromCart=function removeFromCart(productId){return function(dispatch,getState){dispatch({type:CART_REMOVE_ITEM,payload:productId});var _getState2=getState(),cartItems=_getState2.cart.cartItems;Cookie.set(\"cartItems\",JSON.stringify(cartItems));};};var saveShipping=function saveShipping(data){return function(dispatch){dispatch({type:CART_SAVE_SHIPPING,payload:data});};};var savePayment=function savePayment(data){return function(dispatch){dispatch({type:CART_SAVE_PAYMENT,payload:data});};};export{addToCart,removeFromCart,saveShipping,savePayment};","map":{"version":3,"sources":["D:/new pro/myg/frontend/src/actions/cartActions.js"],"names":["Axios","Cookie","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING","CART_SAVE_PAYMENT","addToCart","productId","qty","dispatch","getState","get","data","type","payload","product","_id","name","image","price","countInStock","cartItems","cart","set","JSON","stringify","removeFromCart","saveShipping","savePayment"],"mappings":"ySAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,OAASC,aAAT,CAAwBC,gBAAxB,CAA0CC,kBAA1C,CAA8DC,iBAA9D,KAAuF,4BAAvF,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,SAAD,CAAYC,GAAZ,iGAAoB,iBAAOC,QAAP,CAAiBC,QAAjB,sMAEXV,CAAAA,KAAK,CAACW,GAAN,CAAU,iBAAmBJ,SAA7B,CAFW,uCAE1BK,IAF0B,kBAE1BA,IAF0B,CAGlCH,QAAQ,CAAC,CACPI,IAAI,CAAEX,aADC,CACcY,OAAO,CAAE,CAC5BC,OAAO,CAAEH,IAAI,CAACI,GADc,CAE5BC,IAAI,CAAEL,IAAI,CAACK,IAFiB,CAG5BC,KAAK,CAAEN,IAAI,CAACM,KAHgB,CAI5BC,KAAK,CAAEP,IAAI,CAACO,KAJgB,CAK5BC,YAAY,CAAER,IAAI,CAACQ,YALS,CAM5BZ,GAAG,CAAHA,GAN4B,CADvB,CAAD,CAAR,CAHkC,UAaFE,QAAQ,EAbN,CAalBW,SAbkB,WAa1BC,IAb0B,CAalBD,SAbkB,CAclCpB,MAAM,CAACsB,GAAP,CAAW,WAAX,CAAwBC,IAAI,CAACC,SAAL,CAAeJ,SAAf,CAAxB,EAdkC,sJAApB,oEAAlB,CAoBA,GAAMK,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACnB,SAAD,QAAe,UAACE,QAAD,CAAWC,QAAX,CAAwB,CAC5DD,QAAQ,CAAC,CAAEI,IAAI,CAAEV,gBAAR,CAA0BW,OAAO,CAAEP,SAAnC,CAAD,CAAR,CAD4D,eAG5BG,QAAQ,EAHoB,CAG5CW,SAH4C,YAGpDC,IAHoD,CAG5CD,SAH4C,CAI5DpB,MAAM,CAACsB,GAAP,CAAW,WAAX,CAAwBC,IAAI,CAACC,SAAL,CAAeJ,SAAf,CAAxB,EACD,CALsB,EAAvB,CAMA,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACf,IAAD,QAAU,UAACH,QAAD,CAAc,CAC3CA,QAAQ,CAAC,CAAEI,IAAI,CAAET,kBAAR,CAA4BU,OAAO,CAAEF,IAArC,CAAD,CAAR,CACD,CAFoB,EAArB,CAGA,GAAMgB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAChB,IAAD,QAAU,UAACH,QAAD,CAAc,CAC1CA,QAAQ,CAAC,CAAEI,IAAI,CAAER,iBAAR,CAA2BS,OAAO,CAAEF,IAApC,CAAD,CAAR,CACD,CAFmB,EAApB,CAGA,OAASN,SAAT,CAAoBoB,cAApB,CAAoCC,YAApC,CAAkDC,WAAlD","sourcesContent":["import Axios from \"axios\";\r\nimport Cookie from \"js-cookie\";\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING, CART_SAVE_PAYMENT } from \"../constants/cartConstants\";\r\n\r\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\r\n  try {\r\n    const { data } = await Axios.get(\"/api/products/\" + productId);\r\n    dispatch({\r\n      type: CART_ADD_ITEM, payload: {\r\n        product: data._id,\r\n        name: data.name,\r\n        image: data.image,\r\n        price: data.price,\r\n        countInStock: data.countInStock,\r\n        qty\r\n      }\r\n    });\r\n    const { cart: { cartItems } } = getState();\r\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\r\n\r\n  } catch (error) {\r\n\r\n  }\r\n}\r\nconst removeFromCart = (productId) => (dispatch, getState) => {\r\n  dispatch({ type: CART_REMOVE_ITEM, payload: productId });\r\n\r\n  const { cart: { cartItems } } = getState();\r\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\r\n}\r\nconst saveShipping = (data) => (dispatch) => {\r\n  dispatch({ type: CART_SAVE_SHIPPING, payload: data });\r\n}\r\nconst savePayment = (data) => (dispatch) => {\r\n  dispatch({ type: CART_SAVE_PAYMENT, payload: data });\r\n}\r\nexport { addToCart, removeFromCart, saveShipping, savePayment };\r\n"]},"metadata":{},"sourceType":"module"}